services:
    minio:
        image: minio/minio
        restart: unless-stopped
        ports:
            - "9000:9000" # API
            - "9001:9001" # UI
        env_file:
            - .env.s3
        volumes:
            - ./minio-data:/data
        command: server --console-address ":9001" /data
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
            interval: 30s
            timeout: 20s
            retries: 3
            start_interval: 5s


    file-upload-service:
        build:
            context: ./services/file_upload_service
            dockerfile: Dockerfile
        restart: unless-stopped

        ports:
            - "8080:8080"
        environment:
            S3_BUCKET: files
            S3_REGION: us-east-1
            MINIO_SERVER_URL: minio:9000
        env_file:
            - .env.s3

        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
            interval: 30s
            timeout: 10s
            retries: 3

        depends_on:
            minio:
                condition: service_healthy

    postgres:
        image: postgres:latest
        restart: unless-stopped
        ports:
            - "5432:5432"
        env_file:
            - .env.postgres
        volumes:
            - ./postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: [ "CMD", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
            interval: 10s
            timeout: 3s
            retries: 3
